name: CI/CD Workflow

on:
  pull_request:
    branches:
      - develop
      - master
  push:
    branches:
      - develop
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build docker image for testing
        run: docker build -f Dockerfile.dev -t tonivrd/basic-react-app-with-docker .
        
      - name: Run tests
        run: docker run -e CI=true tonivrd/basic-react-app-with-docker npm run test

  deploy_to_qa:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: QA
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'
 
      - name: Deploy to QA environment
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: frontend
          environment_name: Frontend-qa-env
          existing_bucket_name: elasticbeanstalk-eu-west-1-072085842419
          region: eu-west-1
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip

  deploy_to_production:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    environment: PROD
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'
 
      - name: Deploy to production environment
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: frontend
          environment_name: Frontend-prod-env
          existing_bucket_name: elasticbeanstalk-eu-west-1-072085842419
          region: eu-west-1
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip
